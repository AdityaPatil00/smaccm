/**************************************************************************
  Copyright (c) 2013, 2014, 2015 Rockwell Collins and the University of Minnesota.
  Developed with the sponsorship of the Defense Advanced Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person obtaining a copy of this data,
  including any software or models in source or binary form, as well as any drawings, specifications, 
  and documentation (collectively "the Data"), to deal in the Data without restriction, including 
  without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Data, and to permit persons to whom the Data is furnished to do so, 
  subject to the following conditions: 

  The above copyright notice and this permission notice shall be included in all copies or
  substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
  LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
  IN NO EVENT SHALL THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE 
  FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA. 

 **************************************************************************/


/**************************************************************************

   File: /home/john/git/smaccm/models/SmaccmPhaseIIIV2/components/CAN_hw/CAN_hw.camkes.template
   Created on: 2016/05/05 12:39:39
   using Dulcimer AADL system build tool suite 

   ***AUTOGENERATED CODE: DO NOT MODIFY***

  This header file contains the CAmkES component definition for the 
  AADL thread implementation CAN_hw.

 **************************************************************************/
import "../../interfaces/CAN_hw_interface.idl4";

// Idl files for ports
import "../../interfaces/bool_writer.idl4";
import "../../interfaces/SMACCM_DATA__can_message_i_writer.idl4";

//can driver
import "../can_node/can_node.camkes";

component CAN_hw {
include "smaccm_top_i_types.h";
	control;
 
    //AADL Interface
    has semaphore smaccm_dispatch_sem;

	// connection to active thread 'send' interface
	uses SMACCM_DATA__can_message_i_writer CAN_hw_fragement_reassembly;
	// connection to active thread 'send' interface
	uses bool_writer CAN_hw_send_status;

	// provided interfaces for input event / event data ports (if any)
	provides bool_writer get_abort; 
	has mutex smaccm_can_hw_get_abort_mut; 
	provides SMACCM_DATA__can_message_i_writer fragment_request; 
	has mutex smaccm_can_hw_fragment_request_mut; 
	provides SMACCM_DATA__can_message_i_writer fragment_complete; 
	has mutex smaccm_can_hw_fragment_complete_mut; 

    // Driver interface
    include "smaccm_sys_impl_types.h";
    provides can_message_i_writer can_node_receive;
    provides bool_writer can_node_status_0;
    provides bool_writer can_node_status_1;
    provides bool_writer can_node_status_2;

    //TODO why do we not use these semaphores?
    //uses semaphore status_0_semaphore;
    //uses semaphore status_1_semaphore;
    //uses semaphore status_2_semaphore;

    uses bool_writer can_hw_abort_0;
    uses bool_writer can_hw_abort_1;
    uses bool_writer can_hw_abort_2;

    uses can_message_i_writer can_hw_write_send_0;
    uses can_message_i_writer can_hw_write_send_1;
    uses can_message_i_writer can_hw_write_send_2;

}

assembly {
    composition {
    component can_node can_node_inst;

    connection seL4RPCCall conn1 (from can_hw_inst.can_hw_write_send_0, to can_node_inst.send_0);
    connection seL4RPCCall conn2 (from can_hw_inst.can_hw_write_send_1, to can_node_inst.send_1);
    connection seL4RPCCall conn3 (from can_hw_inst.can_hw_write_send_2, to can_node_inst.send_2);

    connection seL4RPCCall conn4 (from can_hw_inst.can_hw_abort_0, to can_node_inst.abort_0);
    connection seL4RPCCall conn5 (from can_hw_inst.can_hw_abort_1, to can_node_inst.abort_1);
    connection seL4RPCCall conn6 (from can_hw_inst.can_hw_abort_2, to can_node_inst.abort_2);

    connection seL4RPCCall conn7 (from can_node_inst.can_node_status_0, to can_hw_inst.can_node_status0);
    connection seL4RPCCall conn8 (from can_node_inst.can_node_status_1, to can_hw_inst.can_node_status1);
    connection seL4RPCCall conn9 (from can_node_inst.can_node_status_2, to can_hw_inst.can_node_status2);

    }
}

/**************************************************************************
  End of autogenerated file: /home/john/git/smaccm/models/SmaccmPhaseIIIV2/components/CAN_hw/CAN_hw.camkes.template
 **************************************************************************/

