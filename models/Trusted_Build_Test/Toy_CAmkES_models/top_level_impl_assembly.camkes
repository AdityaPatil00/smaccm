/**************************************************************************
  Copyright (c) 2013, 2014 Rockwell Collins and the University of Minnesota.
  Developed with the sponsorship of the Defense Advanced Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person obtaining a copy of this data,
  including any software or models in source or binary form, as well as any drawings, specifications, 
  and documentation (collectively "the Data"), to deal in the Data without restriction, including 
  without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Data, and to permit persons to whom the Data is furnished to do so, 
  subject to the following conditions: 

  The above copyright notice and this permission notice shall be included in all copies or
  substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
  LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
  IN NO EVENT SHALL THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE 
  FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA. 

 **************************************************************************/


/**************************************************************************

   File: C:\docs\git_smaccm\smaccm\models\Trusted_Build_Test\Toy_CAmkES_models\top_level_impl_assembly.camkes
   Created on: 2014/09/18 19:30:44
   using Dulcimer AADL system build tool suite 

   ***AUTOGENERATED CODE: DO NOT MODIFY***

  This header file contains the main CAmkES assembly for the  
  AADL system instance rooted at top_level_impl_Instance.

 **************************************************************************/
import <std_connector.camkes>;
import "components/dispatch_periodic/dispatch_periodic.camkes";
import "components/c/c.camkes";
import "components/b/b.camkes";
import "components/dispatch_b/dispatch_b.camkes";
import "components/a/a.camkes";
import "components/dispatch_a/dispatch_a.camkes";
import "components/e/e.camkes";
import "components/d/d.camkes";
import "components/f/f.camkes";


component EPIT {
    hardware;
    dataport Buf mem;
    emits DataAvailable irq;
}

assembly {
	composition {
        component EPIT epit;
		component dispatch_periodic dispatch_periodic_inst;


		// component instances for all AADL-defined threads
		component c c_inst;
		component b b_inst;
		component a a_inst;
		component e e_inst;
		component d d_inst;
		component f f_inst;


		// active thread components
		component dispatch_b dispatch_b_inst;
		component dispatch_a dispatch_a_inst;


		// connections from active dispatchers to passive threads
		connection seL4RPCCall conn1 (from dispatch_b_inst.c_inst, to c_inst.dispatch);
		connection seL4RPCCall conn2 (from dispatch_b_inst.b_inst, to b_inst.dispatch);
		connection seL4RPCCall conn3 (from dispatch_b_inst.a_inst, to a_inst.dispatch);
		connection seL4RPCCall conn4 (from dispatch_b_inst.e_inst, to e_inst.dispatch);
		connection seL4RPCCall conn5 (from dispatch_b_inst.d_inst, to d_inst.dispatch);
		connection seL4RPCCall conn6 (from dispatch_b_inst.f_inst, to f_inst.dispatch);
		connection seL4RPCCall conn7 (from dispatch_a_inst.c_inst, to c_inst.dispatch);
		connection seL4RPCCall conn8 (from dispatch_a_inst.b_inst, to b_inst.dispatch);
		connection seL4RPCCall conn9 (from dispatch_a_inst.a_inst, to a_inst.dispatch);
		connection seL4RPCCall conn10 (from dispatch_a_inst.e_inst, to e_inst.dispatch);
		connection seL4RPCCall conn11 (from dispatch_a_inst.d_inst, to d_inst.dispatch);
		connection seL4RPCCall conn12 (from dispatch_a_inst.f_inst, to f_inst.dispatch);
	

		// connections from active dispatcher send/receive to other active dispatcher send/receive

		// Periodic dispatcher connections
		connection seL4RPCCall conn13 (from dispatch_periodic_inst.b_periodic_100_ms, to dispatch_b_inst.b_periodic_100_ms);
		connection seL4RPCCall conn14 (from dispatch_periodic_inst.a_periodic_100_ms, to dispatch_a_inst.a_periodic_100_ms);

        connection seL4HardwareMMIO epit_mem(from dispatch_periodic_inst.mem, to epit.mem);
		connection seL4HardwareInterrupt irq(from epit.irq, to dispatch_periodic_inst.irq);

		// Passive component read/write connections

		// Shared data connections (currently unsupported: under development)
	}
    configuration {
		/* Freescale i.MX31 (KZM) */
        epit.mem_attributes = "0x53F98000:0x1000";
		epit.irq_attributes = 27;

		/* Freescale i.MX6 (Sabralite) */
        // epit.mem_attributes = "0x020D0000:0x1000";
		//epit.irq_attributes = 88;
    }
}
/**************************************************************************
  End of autogenerated file: top_level_impl_assembly.camkes
 **************************************************************************/

