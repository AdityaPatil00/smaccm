package DOS_Resilient
public

annex resolute 
{**

is_dos_safe(x : component) <=
 ** x " is safe from a denial of service attack\n"
      " because either the radio thread is not active\n"
      " or nothing is connected to the radio thread\n"
      " and the system is schedulable" **
      radio_thread_is_not_active() or 
      (dos_schedulable() and not_connected_to_radio(x))
      
mavlink_connected(t : component) <= 
	** "thread '" t "' is connected to a mavlink connection" **   
    exists(c : connection).
    exists(y : component). is_mavlink_connection(y, t, c)
    
is_mavlink_connection(x : component, t : component, c : connection) <=
  ** "component '" x "' is connected to component '" t "'\n"
     "via a connection '" c " of type MAVLINK'\n" **
    	connected(x, c, t) and is_stability_thread(t)
    	and type(c) = DATATYPES::MAVLink
    
is_stability_thread(t: component) <=
  ** "Thread '" t "' is the stability thread" **
  class_of(t, SOFTWARE::Stability_Navigation)

dos_schedulable() <=
 ** "External analysis determines the system\n"
    "to be schedulable\n" **
    analysis("schedule")

radio_thread_is_not_active() <=
 ** "The radio thread is not active" **
 forall(t : thread) . is_not_radio(t)

not_connected_to_radio(x : component) <=
 ** x " cannot read from the radio" **
     forall (c : connection).
 	 forall (y : component).
 	     (connected(y, c, x) =>
 	     	is_not_radio(y) and not_connected_to_radio(y))

is_not_radio(x : component) <=
 ** x " is not the radio" **
     not class_of(x, SOFTWARE::Radio_Control)
     
**};

    
end DOS_Resilient;