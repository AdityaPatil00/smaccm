package DATATYPES
public
  with Data_Model;
  with Base_Types;
  
  data RawMessage
  end RawMessage;
  
  data ParsedMessage
  end ParsedMessage; 
  
  data MAVLink
  end MAVLink;
  
  data EncryptMAVLink
  end EncryptMAVLink;
  
  data Flight_Control_Commands
  properties
  	Data_Model::Data_Representation => Struct;
  end Flight_Control_Commands;
  
  data implementation Flight_Control_Commands.Impl
  subcomponents
     f1 : data Base_Types::Float_64;
     i2 : data Base_Types::Integer_32;
  end Flight_Control_Commands.impl;
  
  data Motor_Commands
  properties
  	Data_Model::Data_Representation => Struct;
  end Motor_Commands;
  
  data implementation Motor_Commands.Impl
  subcomponents
     val : data Base_Types::Float_64;
     status : data Base_Types::Integer_8;
  end Motor_Commands.impl;

  data Servo_Commands
  properties
    Data_Model::Data_Representation => Array;
    Data_Model::Base_Type => (classifier (Base_Types::Integer_32));
    Data_Model::Dimension => (10);
  end Servo_Commands;
  
  data Magnetometer_Data
  end Magnetometer_Data;
  
  data Barometric_Data
  end Barometric_Data;
  
  data Motion_Data
  end Motion_Data;
  
  data Battery_Data
  end Battery_Data;
  
  data GPS_Data
  end GPS_Data;
  
  data Sensor_Data
  end Sensor_Data;
end DATATYPES;