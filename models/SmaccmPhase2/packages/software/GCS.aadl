package GCS
public
  with Base_Types;
  with TowerArrays;
  with gcsstream_timing;
  with mavlink_veh_commsec_msg;
  with att_control_dbg_type;
  with alt_control_dbg_type;
  with radio_stat_type;
  with motors_type;
  with controloutput_type;
  with gps_type;
  with sensors_type;
  with control_law_type;
  with mavlink_rc_channels_override_msg;
  with control_law_request_type;
  with mavlink_hil_state_msg;
  with SMACCM;
  with SMACCM_SYS;
  with FeatureGroups;

  thread group GCS
    features
      gcsTxToEncSrc: out event data port TowerArrays::ArrTy_80TyBase_Types_Unsigned_8.impl{
        Queue_Size => 16;
      };
      mavStream: in event data port TowerArrays::ArrTy_80TyBase_Types_Unsigned_8.impl {
        Queue_Size => 16;
      };
      rc_override_tx: out event data port mavlink_rc_channels_override_msg::rc_channels_override_msg.impl {
        Queue_Size => 16;
      };
      control_law_request: out event data port control_law_request_type::control_law_request.impl {
        Queue_Size => 16;
      };
      
      radioEvent5: in event data port radio_stat_type::radio_stat.impl {
        Queue_Size => 2;
      };
    
      radioData5: requires data access radio_stat_type::radio_stat.impl {
        Access_Right => write_only;
      };
      
      --params
    transmit : feature group FeatureGroups::control_params_read;
    receiveParamsRead : feature group FeatureGroups::control_params_read;
    receiveParamsWrite : feature group FeatureGroups::control_params_write;
    transCons : feature group FeatureGroups::data_conns;
    
  end GCS;
  
  thread group implementation GCS.Impl
  	subcomponents
	  gcsTransmitTask_inst : thread gcsTransmitTask;
      gcsReceiveTask_inst : thread gcsReceiveTask;
      radio_status_inst : thread radio_status;
      
    connections
      conn_322 : port gcsReceiveTask_inst.streamperiods -> gcsTransmitTask_inst.streamPeriod;
      conn_533 : port gcsReceiveTask_inst.param_req -> gcsTransmitTask_inst.paramReqs;
      txuart5 : port gcsTransmitTask_inst.gcsTxToEncSrc -> gcsTxToEncSrc;
      mavlink5 : port mavStream -> gcsReceiveTask_inst.mavStream;
      rc : port gcsReceiveTask_inst.rc_override_tx -> rc_override_tx;
      ctrlrq: port gcsReceiveTask_inst.control_law_request -> control_law_request;
      radEvent5: port radioEvent5 -> radio_status_inst.proxyEvent;
      radData5: data access radio_status_inst.proxyData -> radioData5;
     
      --paramater connections
     conn_342 : data access gcsTransmitTask_inst.param_reader_ALT_UI_DEAD -> transmit.param_reader_ALT_UI_DEAD;
     conn_0 : data access gcsTransmitTask_inst.param_reader_ALT_UI_SENS -> transmit.param_reader_ALT_UI_SENS;
     conn_1 : data access gcsTransmitTask_inst.param_reader_ALT_POS_IMAX -> transmit.param_reader_ALT_POS_IMAX;
     conn_2 : data access gcsTransmitTask_inst.param_reader_ALT_POS_D -> transmit.param_reader_ALT_POS_D;
     conn_3 : data access gcsTransmitTask_inst.param_reader_ALT_POS_I -> transmit.param_reader_ALT_POS_I;
     conn_4 : data access gcsTransmitTask_inst.param_reader_ALT_POS_P -> transmit.param_reader_ALT_POS_P;
     conn_5 : data access gcsTransmitTask_inst.param_reader_ALT_RATE_IMAX -> transmit.param_reader_ALT_RATE_IMAX;
     conn_6 : data access gcsTransmitTask_inst.param_reader_ALT_RATE_D -> transmit.param_reader_ALT_RATE_D;
     conn_7 : data access gcsTransmitTask_inst.param_reader_ALT_RATE_I -> transmit.param_reader_ALT_RATE_I;
     conn_8 : data access gcsTransmitTask_inst.param_reader_ALT_RATE_P -> transmit.param_reader_ALT_RATE_P;
     conn_9 : data access gcsTransmitTask_inst.param_reader_YAW_STAB_IMAX -> transmit.param_reader_YAW_STAB_IMAX;
     conn_10 : data access gcsTransmitTask_inst.param_reader_YAW_STAB_D -> transmit.param_reader_YAW_STAB_D;
     conn_11 : data access gcsTransmitTask_inst.param_reader_YAW_STAB_I -> transmit.param_reader_YAW_STAB_I;
     conn_12 : data access gcsTransmitTask_inst.param_reader_YAW_STAB_P -> transmit.param_reader_YAW_STAB_P;
     conn_13 : data access gcsTransmitTask_inst.param_reader_YAW_RATE_IMAX -> transmit.param_reader_YAW_RATE_IMAX;
     conn_14 : data access gcsTransmitTask_inst.param_reader_YAW_RATE_D -> transmit.param_reader_YAW_RATE_D;
     conn_15 : data access gcsTransmitTask_inst.param_reader_YAW_RATE_I -> transmit.param_reader_YAW_RATE_I;
     conn_16 : data access gcsTransmitTask_inst.param_reader_YAW_RATE_P -> transmit.param_reader_YAW_RATE_P;
     conn_17 : data access gcsTransmitTask_inst.param_reader_PIT_STAB_IMAX -> transmit.param_reader_PIT_STAB_IMAX;
     conn_18 : data access gcsTransmitTask_inst.param_reader_PIT_STAB_D -> transmit.param_reader_PIT_STAB_D;
     conn_19 : data access gcsTransmitTask_inst.param_reader_PIT_STAB_I -> transmit.param_reader_PIT_STAB_I;
     conn_20 : data access gcsTransmitTask_inst.param_reader_PIT_STAB_P -> transmit.param_reader_PIT_STAB_P;
     conn_21 : data access gcsTransmitTask_inst.param_reader_PIT_RATE_IMAX -> transmit.param_reader_PIT_RATE_IMAX;
     conn_22 : data access gcsTransmitTask_inst.param_reader_PIT_RATE_D -> transmit.param_reader_PIT_RATE_D;
     conn_23 : data access gcsTransmitTask_inst.param_reader_PIT_RATE_I -> transmit.param_reader_PIT_RATE_I;
     conn_24 : data access gcsTransmitTask_inst.param_reader_PIT_RATE_P -> transmit.param_reader_PIT_RATE_P;
     conn_25 : data access gcsTransmitTask_inst.param_reader_RLL_STAB_IMAX -> transmit.param_reader_RLL_STAB_IMAX;
     conn_26 : data access gcsTransmitTask_inst.param_reader_RLL_STAB_D -> transmit.param_reader_RLL_STAB_D;
     conn_27 : data access gcsTransmitTask_inst.param_reader_RLL_STAB_I -> transmit.param_reader_RLL_STAB_I;
     conn_28 : data access gcsTransmitTask_inst.param_reader_RLL_STAB_P -> transmit.param_reader_RLL_STAB_P;
     conn_29 : data access gcsTransmitTask_inst.param_reader_RLL_RATE_IMAX -> transmit.param_reader_RLL_RATE_IMAX;
     conn_30 : data access gcsTransmitTask_inst.param_reader_RLL_RATE_D -> transmit.param_reader_RLL_RATE_D;
     conn_31 : data access gcsTransmitTask_inst.param_reader_RLL_RATE_I -> transmit.param_reader_RLL_RATE_I;
     conn_32 : data access gcsTransmitTask_inst.param_reader_RLL_RATE_P -> transmit.param_reader_RLL_RATE_P;
    

      conn_220 : data access gcsTransmitTask_inst.commsecInfo -> transCons.commsecInfo;
      conn_221 : data access gcsTransmitTask_inst.att_control -> transCons.att_control;
      conn_222 : data access gcsTransmitTask_inst.alt_control -> transCons.alt_control;
      conn_223 : data access gcsTransmitTask_inst.radio -> transCons.radio;
      conn_224 : data access gcsTransmitTask_inst.motors -> transCons.motors;
      conn_225 : data access gcsTransmitTask_inst.control -> transCons.control;
      conn_226 : data access gcsTransmitTask_inst.position -> transCons.position;
      conn_227 : data access gcsTransmitTask_inst.sensors -> transCons.sensors;
      conn_228: data access gcsTransmitTask_inst.controllaw -> transCons.controllaw;
     
    conn_83 : data access gcsReceiveTask_inst.param_writer_ALT_UI_DEAD -> receiveParamsWrite.param_writer_ALT_UI_DEAD;
    conn_84 : data access gcsReceiveTask_inst.param_writer_ALT_UI_SENS -> receiveParamsWrite.param_writer_ALT_UI_SENS;
    conn_85 : data access gcsReceiveTask_inst.param_writer_ALT_POS_IMAX -> receiveParamsWrite.param_writer_ALT_POS_IMAX;
    conn_86 : data access gcsReceiveTask_inst.param_writer_ALT_POS_D -> receiveParamsWrite.param_writer_ALT_POS_D;
    conn_87 : data access gcsReceiveTask_inst.param_writer_ALT_POS_I -> receiveParamsWrite.param_writer_ALT_POS_I;
    conn_88 : data access gcsReceiveTask_inst.param_writer_ALT_POS_P -> receiveParamsWrite.param_writer_ALT_POS_P;
    conn_89 : data access gcsReceiveTask_inst.param_writer_ALT_RATE_IMAX -> receiveParamsWrite.param_writer_ALT_RATE_IMAX;
    conn_90 : data access gcsReceiveTask_inst.param_writer_ALT_RATE_D -> receiveParamsWrite.param_writer_ALT_RATE_D;
    conn_91 : data access gcsReceiveTask_inst.param_writer_ALT_RATE_I -> receiveParamsWrite.param_writer_ALT_RATE_I;
    conn_92 : data access gcsReceiveTask_inst.param_writer_ALT_RATE_P -> receiveParamsWrite.param_writer_ALT_RATE_P;
    conn_93 : data access gcsReceiveTask_inst.param_writer_YAW_STAB_IMAX -> receiveParamsWrite.param_writer_YAW_STAB_IMAX;
    conn_94 : data access gcsReceiveTask_inst.param_writer_YAW_STAB_D -> receiveParamsWrite.param_writer_YAW_STAB_D;
    conn_95 : data access gcsReceiveTask_inst.param_writer_YAW_STAB_I -> receiveParamsWrite.param_writer_YAW_STAB_I;
    conn_96 : data access gcsReceiveTask_inst.param_writer_YAW_STAB_P -> receiveParamsWrite.param_writer_YAW_STAB_P;
    conn_97 : data access gcsReceiveTask_inst.param_writer_YAW_RATE_IMAX -> receiveParamsWrite.param_writer_YAW_RATE_IMAX;
    conn_98 : data access gcsReceiveTask_inst.param_writer_YAW_RATE_D -> receiveParamsWrite.param_writer_YAW_RATE_D;
    conn_99 : data access gcsReceiveTask_inst.param_writer_YAW_RATE_I -> receiveParamsWrite.param_writer_YAW_RATE_I;
    conn_100 : data access gcsReceiveTask_inst.param_writer_YAW_RATE_P -> receiveParamsWrite.param_writer_YAW_RATE_P;
    conn_101 : data access gcsReceiveTask_inst.param_writer_PIT_STAB_IMAX -> receiveParamsWrite.param_writer_PIT_STAB_IMAX;
    conn_102 : data access gcsReceiveTask_inst.param_writer_PIT_STAB_D -> receiveParamsWrite.param_writer_PIT_STAB_D;
    conn_103 : data access gcsReceiveTask_inst.param_writer_PIT_STAB_I -> receiveParamsWrite.param_writer_PIT_STAB_I;
    conn_104 : data access gcsReceiveTask_inst.param_writer_PIT_STAB_P -> receiveParamsWrite.param_writer_PIT_STAB_P;
    conn_105 : data access gcsReceiveTask_inst.param_writer_PIT_RATE_IMAX -> receiveParamsWrite.param_writer_PIT_RATE_IMAX;
    conn_106 : data access gcsReceiveTask_inst.param_writer_PIT_RATE_D -> receiveParamsWrite.param_writer_PIT_RATE_D;
    conn_107 : data access gcsReceiveTask_inst.param_writer_PIT_RATE_I -> receiveParamsWrite.param_writer_PIT_RATE_I;
    conn_108 : data access gcsReceiveTask_inst.param_writer_PIT_RATE_P -> receiveParamsWrite.param_writer_PIT_RATE_P;
    conn_109 : data access gcsReceiveTask_inst.param_writer_RLL_STAB_IMAX -> receiveParamsWrite.param_writer_RLL_STAB_IMAX;
    conn_110 : data access gcsReceiveTask_inst.param_writer_RLL_STAB_D -> receiveParamsWrite.param_writer_RLL_STAB_D;
    conn_111 : data access gcsReceiveTask_inst.param_writer_RLL_STAB_I -> receiveParamsWrite.param_writer_RLL_STAB_I;
    conn_112 : data access gcsReceiveTask_inst.param_writer_RLL_STAB_P -> receiveParamsWrite.param_writer_RLL_STAB_P;
    conn_113 : data access gcsReceiveTask_inst.param_writer_RLL_RATE_IMAX -> receiveParamsWrite.param_writer_RLL_RATE_IMAX;
    conn_114 : data access gcsReceiveTask_inst.param_writer_RLL_RATE_D -> receiveParamsWrite.param_writer_RLL_RATE_D;
    conn_115 : data access gcsReceiveTask_inst.param_writer_RLL_RATE_I -> receiveParamsWrite.param_writer_RLL_RATE_I;
    conn_116 : data access gcsReceiveTask_inst.param_writer_RLL_RATE_P -> receiveParamsWrite.param_writer_RLL_RATE_P;
    conn_117 : data access gcsReceiveTask_inst.param_reader_ALT_UI_DEAD -> receiveParamsRead.param_reader_ALT_UI_DEAD;
    conn_118 : data access gcsReceiveTask_inst.param_reader_ALT_UI_SENS -> receiveParamsRead.param_reader_ALT_UI_SENS;
    conn_119 : data access gcsReceiveTask_inst.param_reader_ALT_POS_IMAX -> receiveParamsRead.param_reader_ALT_POS_IMAX;
    conn_120 : data access gcsReceiveTask_inst.param_reader_ALT_POS_D -> receiveParamsRead.param_reader_ALT_POS_D;
    conn_121 : data access gcsReceiveTask_inst.param_reader_ALT_POS_I -> receiveParamsRead.param_reader_ALT_POS_I;
    conn_122 : data access gcsReceiveTask_inst.param_reader_ALT_POS_P -> receiveParamsRead.param_reader_ALT_POS_P;
    conn_123 : data access gcsReceiveTask_inst.param_reader_ALT_RATE_IMAX -> receiveParamsRead.param_reader_ALT_RATE_IMAX;
    conn_124 : data access gcsReceiveTask_inst.param_reader_ALT_RATE_D -> receiveParamsRead.param_reader_ALT_RATE_D;
    conn_125 : data access gcsReceiveTask_inst.param_reader_ALT_RATE_I -> receiveParamsRead.param_reader_ALT_RATE_I;
    conn_126 : data access gcsReceiveTask_inst.param_reader_ALT_RATE_P -> receiveParamsRead.param_reader_ALT_RATE_P;
    conn_127 : data access gcsReceiveTask_inst.param_reader_YAW_STAB_IMAX -> receiveParamsRead.param_reader_YAW_STAB_IMAX;
    conn_128 : data access gcsReceiveTask_inst.param_reader_YAW_STAB_D -> receiveParamsRead.param_reader_YAW_STAB_D;
    conn_129 : data access gcsReceiveTask_inst.param_reader_YAW_STAB_I -> receiveParamsRead.param_reader_YAW_STAB_I;
    conn_130 : data access gcsReceiveTask_inst.param_reader_YAW_STAB_P -> receiveParamsRead.param_reader_YAW_STAB_P;
    conn_131 : data access gcsReceiveTask_inst.param_reader_YAW_RATE_IMAX -> receiveParamsRead.param_reader_YAW_RATE_IMAX;
    conn_132 : data access gcsReceiveTask_inst.param_reader_YAW_RATE_D -> receiveParamsRead.param_reader_YAW_RATE_D;
    conn_133 : data access gcsReceiveTask_inst.param_reader_YAW_RATE_I -> receiveParamsRead.param_reader_YAW_RATE_I;
    conn_134 : data access gcsReceiveTask_inst.param_reader_YAW_RATE_P -> receiveParamsRead.param_reader_YAW_RATE_P;
    conn_135 : data access gcsReceiveTask_inst.param_reader_PIT_STAB_IMAX -> receiveParamsRead.param_reader_PIT_STAB_IMAX;
    conn_136 : data access gcsReceiveTask_inst.param_reader_PIT_STAB_D -> receiveParamsRead.param_reader_PIT_STAB_D;
    conn_137 : data access gcsReceiveTask_inst.param_reader_PIT_STAB_I -> receiveParamsRead.param_reader_PIT_STAB_I;
    conn_138 : data access gcsReceiveTask_inst.param_reader_PIT_STAB_P -> receiveParamsRead.param_reader_PIT_STAB_P;
    conn_139 : data access gcsReceiveTask_inst.param_reader_PIT_RATE_IMAX -> receiveParamsRead.param_reader_PIT_RATE_IMAX;
    conn_140 : data access gcsReceiveTask_inst.param_reader_PIT_RATE_D -> receiveParamsRead.param_reader_PIT_RATE_D;
    conn_141 : data access gcsReceiveTask_inst.param_reader_PIT_RATE_I -> receiveParamsRead.param_reader_PIT_RATE_I;
    conn_142 : data access gcsReceiveTask_inst.param_reader_PIT_RATE_P -> receiveParamsRead.param_reader_PIT_RATE_P;
    conn_143 : data access gcsReceiveTask_inst.param_reader_RLL_STAB_IMAX -> receiveParamsRead.param_reader_RLL_STAB_IMAX;
    conn_144 : data access gcsReceiveTask_inst.param_reader_RLL_STAB_D -> receiveParamsRead.param_reader_RLL_STAB_D;
    conn_145 : data access gcsReceiveTask_inst.param_reader_RLL_STAB_I -> receiveParamsRead.param_reader_RLL_STAB_I;
    conn_146 : data access gcsReceiveTask_inst.param_reader_RLL_STAB_P -> receiveParamsRead.param_reader_RLL_STAB_P;
    conn_147 : data access gcsReceiveTask_inst.param_reader_RLL_RATE_IMAX -> receiveParamsRead.param_reader_RLL_RATE_IMAX;
    conn_148 : data access gcsReceiveTask_inst.param_reader_RLL_RATE_D -> receiveParamsRead.param_reader_RLL_RATE_D;
    conn_149 : data access gcsReceiveTask_inst.param_reader_RLL_RATE_I -> receiveParamsRead.param_reader_RLL_RATE_I;
    conn_150 : data access gcsReceiveTask_inst.param_reader_RLL_RATE_P -> receiveParamsRead.param_reader_RLL_RATE_P;
   
    
  end GCS.Impl;
  
  thread gcsTransmitTask
  features
    gcsTxToEncSrc: out event data port TowerArrays::ArrTy_80TyBase_Types_Unsigned_8.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsTransmitTask_1003_chan775_1021";
    };
    streamPeriod: in event data port gcsstream_timing::gcsstream_timing.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_gcsTransmitTask_1003_chan778_1103";
      SMACCM_SYS::Compute_Entrypoint_Source_Text => ("eventhandler_gcsTransmitTask_1003_chan778_1106");
    };
    paramReqs: in event data port Base_Types::Integer_16 {
      Queue_Size => 512;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_gcsTransmitTask_1003_chan779_1028";
    };
    param_reader_ALT_UI_DEAD: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport36_1096";
    };
    param_reader_ALT_UI_SENS: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport35_1094";
    };
    param_reader_ALT_POS_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport34_1092";
    };
    param_reader_ALT_POS_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport33_1090";
    };
    param_reader_ALT_POS_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport32_1088";
    };
    param_reader_ALT_POS_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport31_1086";
    };
    param_reader_ALT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport30_1084";
    };
    param_reader_ALT_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport29_1082";
    };
    param_reader_ALT_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport28_1080";
    };
    param_reader_ALT_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport27_1078";
    };
    param_reader_YAW_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport26_1076";
    };
    param_reader_YAW_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport25_1074";
    };
    param_reader_YAW_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport24_1072";
    };
    param_reader_YAW_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport23_1070";
    };
    param_reader_YAW_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport22_1068";
    };
    param_reader_YAW_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport21_1066";
    };
    param_reader_YAW_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport20_1064";
    };
    param_reader_YAW_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport19_1062";
    };
    param_reader_PIT_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport18_1060";
    };
    param_reader_PIT_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport17_1058";
    };
    param_reader_PIT_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport16_1056";
    };
    param_reader_PIT_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport15_1054";
    };
    param_reader_PIT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport14_1052";
    };
    param_reader_PIT_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport13_1050";
    };
    param_reader_PIT_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport12_1048";
    };
    param_reader_PIT_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport11_1046";
    };
    param_reader_RLL_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport10_1044";
    };
    param_reader_RLL_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport9_1042";
    };
    param_reader_RLL_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport8_1040";
    };
    param_reader_RLL_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport7_1038";
    };
    param_reader_RLL_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport6_1036";
    };
    param_reader_RLL_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport5_1034";
    };
    param_reader_RLL_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport4_1032";
    };
    param_reader_RLL_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport3_1030";
    };
    commsecInfo: requires data access mavlink_veh_commsec_msg::veh_commsec_msg.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport777_1023";
    };
    att_control: requires data access att_control_dbg_type::att_control_dbg.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport40_1019";
    };
    alt_control: requires data access alt_control_dbg_type::alt_control_dbg.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport39_1017";
    };
    radio: requires data access radio_stat_type::radio_stat.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport817_1015";
    };
    motors: requires data access motors_type::motors.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport306_1013";
    };
    control: requires data access controloutput_type::controloutput.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport297_1011";
    };
    position: requires data access gps_type::position.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport341_1009";
    };
    sensors: requires data access sensors_type::sensors_result.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport0_1007";
    };
    controllaw: requires data access control_law_type::control_law.impl {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsTransmitTask_1003.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsTransmitTask_1003_dataport140_1005";
    };
  properties
    Source_Text => ("tower_task_usercode_gcsTransmitTask_1003.c");
    Priority => 0;
    Stack_Size => 1024 bytes;
    SMACCM::Language => "Ivory";
    Dispatch_Protocol => Hybrid;
    Period => 50 ms;
    SMACCM_SYS::Compute_Entrypoint_Source_Text => ("eventhandler_gcsTransmitTask_1003_per50_1110");
  end gcsTransmitTask;
  
  thread gcsReceiveTask
  features
    streamperiods: out event data port gcsstream_timing::gcsstream_timing.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsReceiveTask_839_chan778_987";
    };
    rc_override_tx: out event data port mavlink_rc_channels_override_msg::rc_channels_override_msg.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsReceiveTask_839_chan2_983";
    };
    param_req: out event data port Base_Types::Integer_16 {
      Queue_Size => 512;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsReceiveTask_839_chan779_981";
    };
    control_law_request: out event data port control_law_request_type::control_law_request.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsReceiveTask_839_chan1_843";
    };
    hil_src: out event data port mavlink_hil_state_msg::hil_state_msg.impl {
      Queue_Size => 4;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_gcsReceiveTask_839_chan780_841";
      SMACCM::Unimplemented => true;
    };
    mavStream: in event data port TowerArrays::ArrTy_80TyBase_Types_Unsigned_8.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_gcsReceiveTask_839_chan776_991";
      SMACCM_SYS::Compute_Entrypoint_Source_Text => ("eventhandler_gcsReceiveTask_839_chan776_994");
    };
    param_writer_ALT_UI_DEAD: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport36_911";
    };
    param_writer_ALT_UI_SENS: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport35_909";
    };
    param_writer_ALT_POS_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport34_907";
    };
    param_writer_ALT_POS_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport33_905";
    };
    param_writer_ALT_POS_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport32_903";
    };
    param_writer_ALT_POS_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport31_901";
    };
    param_writer_ALT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport30_899";
    };
    param_writer_ALT_RATE_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport29_897";
    };
    param_writer_ALT_RATE_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport28_895";
    };
    param_writer_ALT_RATE_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport27_893";
    };
    param_writer_YAW_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport26_891";
    };
    param_writer_YAW_STAB_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport25_889";
    };
    param_writer_YAW_STAB_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport24_887";
    };
    param_writer_YAW_STAB_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport23_885";
    };
    param_writer_YAW_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport22_883";
    };
    param_writer_YAW_RATE_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport21_881";
    };
    param_writer_YAW_RATE_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport20_879";
    };
    param_writer_YAW_RATE_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport19_877";
    };
    param_writer_PIT_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport18_875";
    };
    param_writer_PIT_STAB_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport17_873";
    };
    param_writer_PIT_STAB_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport16_871";
    };
    param_writer_PIT_STAB_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport15_869";
    };
    param_writer_PIT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport14_867";
    };
    param_writer_PIT_RATE_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport13_865";
    };
    param_writer_PIT_RATE_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport12_863";
    };
    param_writer_PIT_RATE_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport11_861";
    };
    param_writer_RLL_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport10_859";
    };
    param_writer_RLL_STAB_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport9_857";
    };
    param_writer_RLL_STAB_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport8_855";
    };
    param_writer_RLL_STAB_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport7_853";
    };
    param_writer_RLL_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport6_851";
    };
    param_writer_RLL_RATE_D: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport5_849";
    };
    param_writer_RLL_RATE_I: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport4_847";
    };
    param_writer_RLL_RATE_P: requires data access Base_Types::Float {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_gcsReceiveTask_839_dataport3_845";
    };
    param_reader_ALT_UI_DEAD: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport36_979";
    };
    param_reader_ALT_UI_SENS: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport35_977";
    };
    param_reader_ALT_POS_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport34_975";
    };
    param_reader_ALT_POS_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport33_973";
    };
    param_reader_ALT_POS_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport32_971";
    };
    param_reader_ALT_POS_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport31_969";
    };
    param_reader_ALT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport30_967";
    };
    param_reader_ALT_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport29_965";
    };
    param_reader_ALT_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport28_963";
    };
    param_reader_ALT_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport27_961";
    };
    param_reader_YAW_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport26_959";
    };
    param_reader_YAW_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport25_957";
    };
    param_reader_YAW_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport24_955";
    };
    param_reader_YAW_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport23_953";
    };
    param_reader_YAW_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport22_951";
    };
    param_reader_YAW_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport21_949";
    };
    param_reader_YAW_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport20_947";
    };
    param_reader_YAW_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport19_945";
    };
    param_reader_PIT_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport18_943";
    };
    param_reader_PIT_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport17_941";
    };
    param_reader_PIT_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport16_939";
    };
    param_reader_PIT_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport15_937";
    };
    param_reader_PIT_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport14_935";
    };
    param_reader_PIT_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport13_933";
    };
    param_reader_PIT_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport12_931";
    };
    param_reader_PIT_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport11_929";
    };
    param_reader_RLL_STAB_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport10_927";
    };
    param_reader_RLL_STAB_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport9_925";
    };
    param_reader_RLL_STAB_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport8_923";
    };
    param_reader_RLL_STAB_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport7_921";
    };
    param_reader_RLL_RATE_IMAX: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport6_919";
    };
    param_reader_RLL_RATE_D: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport5_917";
    };
    param_reader_RLL_RATE_I: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport4_915";
    };
    param_reader_RLL_RATE_P: requires data access Base_Types::Float {
      Access_Right => read_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_gcsReceiveTask_839.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_gcsReceiveTask_839_dataport3_913";
    };
  properties
    Source_Text => ("tower_task_usercode_gcsReceiveTask_839.c");
    Priority => 2;
    Stack_Size => 1024 bytes;
    SMACCM::Language => "Ivory";
    Dispatch_Protocol => Sporadic;
    SMACCM::Always_Sends_Message => true;
end gcsReceiveTask;

thread radio_status
  features
    proxyEvent: in event data port radio_stat_type::radio_stat.impl {
      Queue_Size => 2;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_radio_status_818.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_radio_status_818_chan783_822";
      SMACCM_SYS::Compute_Entrypoint_Source_Text => ("eventhandler_radio_status_818_chan783_825");
    };
    proxyData: requires data access radio_stat_type::radio_stat.impl {
      Access_Right => write_only;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_radio_status_818.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_radio_status_818_dataport817_820";
    };
  properties
    Source_Text => ("tower_task_usercode_radio_status_818.c");
    Priority => 4;
    Stack_Size => 256 bytes;
    SMACCM::Language => "Ivory";
    Dispatch_Protocol => Sporadic;
end radio_status;

end GCS;