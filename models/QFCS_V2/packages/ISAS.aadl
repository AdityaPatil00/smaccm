package ISAS
public
  with DATA_TYPES;


system ISAS_Sys
  Features
    elevators : in data port DATA_TYPES::QUAD_Elevators.treal;
    ailerons : in data port DATA_TYPES::QUAD_Ailerons.treal;
    rudders : in data port DATA_TYPES::QUAD_Rudders.treal;
    flaps : in data port DATA_TYPES::QUAD_Flaps.treal;
    aoa : in data port DATA_TYPES::DUAL_AoA.treal;
    air_data : in data port DATA_TYPES::DUAL_AirData.treal;
    egi : in data port DATA_TYPES::QUAD_EGI.treal;
    spoilers : in data port DATA_TYPES::QUAD_Spoilers.treal;
    stabilizers : in data port DATA_TYPES::QUAD_Stabilizer.treal;
    
    elevators_select : out data port DATA_TYPES::Elevators.treal;
    ailerons_select : out data port DATA_TYPES::Ailerons.treal;
    rudders_select : out data port DATA_TYPES::Rudders.treal;
    flaps_select : out data port DATA_TYPES::Flaps.treal;
    aoa_select : out data port DATA_TYPES::AoA.treal;
    air_data_select : out data port DATA_TYPES::AirData.treal; 
    egi_select : out data port DATA_TYPES::EGI.treal;
    spoilers_select : in data port DATA_TYPES::Spoilers.treal;
    stabilizers_select : out data port DATA_TYPES::Stabilizer.treal;
    
    annex agree {**
    	    	
    	eq elevators_failed_update : DATA_TYPES.quad_bool; 
		eq ailerons_failed_update : DATA_TYPES.quad_bool;
        eq rudders_failed_update : DATA_TYPES.quad_bool;
        eq flaps_failed_update : DATA_TYPES.quad_bool;
        eq aoa_failed_update : DATA_TYPES.dual_bool;
        eq air_data_failed_update : DATA_TYPES.dual_bool; 
        eq spoilers_failed_update : DATA_TYPES.quad_bool;
        eq stabilizers_failed_update : DATA_TYPES.quad_bool;
        
        eq elevators_in_range : DATA_TYPES::QUAD_Elevators.tbool; 
		eq ailerons_in_range : DATA_TYPES::QUAD_Ailerons.tbool;
        eq rudders_in_range : DATA_TYPES::QUAD_Rudders.tbool;
        eq flaps_in_range : DATA_TYPES::QUAD_Flaps.tbool;
        eq aoa_in_range : DATA_TYPES::DUAL_AoA.tbool;
        eq air_data_in_range : DATA_TYPES::DUAL_AirData.tbool; 
        eq spoilers_in_range :  DATA_TYPES::QUAD_Spoilers.tbool;
        eq stabilizer_in_range : DATA_TYPES::QUAD_Stabilizer.tbool;
        
        eq elevators_within_tol : DATA_TYPES::QUAD_Elevators.tbool; 
		eq ailerons_within_tol : DATA_TYPES::QUAD_Ailerons.tbool;
        eq rudders_within_tol : DATA_TYPES::QUAD_Rudders.tbool;
        eq flaps_within_tol : DATA_TYPES::QUAD_Flaps.tbool;
        eq aoa_within_tol : DATA_TYPES::DUAL_AoA.tbool;
        eq air_data_within_tol : DATA_TYPES::DUAL_AirData.tbool; 
        eq spoilers_within_tol :  DATA_TYPES::QUAD_Spoilers.tbool;
        eq stabilizer_within_tol : DATA_TYPES::QUAD_Stabilizer.tbool;
        
        eq elevators_faults : DATA_TYPES::QUAD_Elevators.tbool; 
		eq ailerons_faults : DATA_TYPES::QUAD_Ailerons.tbool;
        eq rudders_faults : DATA_TYPES::QUAD_Rudders.tbool;
        eq flaps_faults : DATA_TYPES::QUAD_Flaps.tbool;
        eq aoa_faults : DATA_TYPES::DUAL_AoA.tbool;
        eq air_data_faults : DATA_TYPES::DUAL_AirData.tbool; 
        eq spoilers_faults :  DATA_TYPES::QUAD_Spoilers.tbool;
        eq stabilizer_faults : DATA_TYPES::QUAD_Stabilizer.tbool;
        
        eq elevators_sig_tol : DATA_TYPES::Elevators.treal; 
		eq ailerons_sig_tol : DATA_TYPES::Ailerons.treal;
        eq rudders_sig_tol : DATA_TYPES::Rudders.treal;
        eq flaps_sig_tol : DATA_TYPES::Flaps.treal;
        eq aoa_sig_tol : DATA_TYPES::AoA.treal;
        eq air_data_sig_tol : DATA_TYPES::AirData.treal; 
        eq spoilers_sig_tol :  DATA_TYPES::Spoilers.treal;
        eq stabilizer_sig_tol : DATA_TYPES::Stabilizer.treal;
        
        --For single channel inputs, ISAS shall determine if the data has failed
        --to update, however the command return value will still be passed to OSAS.
    
        --shall check dual and quad inputs to determine if the data has failed
        --to update from the previous sample frame.
        
        guarantee "ISAS_S_100_130" : ISAS_S_100_130.req(elevators,
		     ailerons , rudders , flaps , aoa , air_data , spoilers , stabilizers,
             elevators_failed_update , ailerons_failed_update , rudders_failed_update ,
             flaps_failed_update , aoa_failed_update , air_data_failed_update , 
             spoilers_failed_update, stabilizers_failed_update);
             
        --ISAS shall determine whether each dual and quad digital
        --signal input falls outside its operational range.
        guarantee "ISAS-S-110" : ISAS_S_110.req(elevators,
		     ailerons , rudders , flaps , aoa , air_data , spoilers , stabilizers,
             elevators_in_range , ailerons_in_range , rudders_in_range ,
             flaps_in_range , aoa_in_range , air_data_in_range , 
             spoilers_in_range, stabilizer_in_range);
             
        
        --ISAS shall compare dual channel inputs to determine 
        --if the signals match within a tolerance.
        
        --ISAS shall compare quad digital inputs to determine if each channel's  
        --signal matches within a tolerance to another channel's signal.
        guarantee "ISAS-S-140-150" : ISAS_S_140_150.req(elevators,
		     ailerons , rudders , flaps , aoa , air_data , spoilers , stabilizers,
             elevators_within_tol , ailerons_within_tol , rudders_within_tol ,
             flaps_within_tol , aoa_within_tol , air_data_within_tol , 
             spoilers_within_tol, stabilizer_within_tol);
        
        --the ISAS-S-160 should be covered by ISAS-S-150 once we have type information
        --guarantee "ISAS-S-160": true;
        
         --ISAS shall determine the selected value of healthy dual 
         --inputs by averaging the signal values.
        guarantee "ISAS-S-170" : ISAS_S_170.req(aoa, air_data, aoa_within_tol, air_data_within_tol,
            aoa_failed_update, air_data_failed_update, aoa_in_range, air_data_in_range,
            aoa_select, air_data_select);
            
        -- ISAS shall determine the selected value for a quad digital signal using the following table:
        -- 1) 4 good values with total range less than SignalTolerance, average all 4
        -- 2) 4 good values with total range greater than SignalTolerance, average middle 2
        -- 3) 3 good values with total range less than SignalTolerance, average all 3
        -- 4) 3 good values with total range greater than SignalTolerance, select middle value
        -- 5) 2 good values with total range less than SignalTolerance, average values
    
        --note this isn't completely up to standard
    
        guarantee "ISAS-S-260" :ISAS_S_260.req(elevators,
		     ailerons , rudders , flaps   , spoilers , stabilizers,
             elevators_faults , ailerons_faults , rudders_faults ,
             flaps_sig_tol  , 
             spoilers_sig_tol, stabilizer_sig_tol, elevators_sig_tol , ailerons_sig_tol , rudders_sig_tol ,
             flaps_sig_tol   , 
             spoilers_sig_tol, stabilizer_sig_tol,
             elevators_select , ailerons_select , rudders_select ,
             flaps_select  , 
             spoilers_select, stabilizers_select);
        
    **};
    
    
end ISAS_Sys; 


end ISAS;