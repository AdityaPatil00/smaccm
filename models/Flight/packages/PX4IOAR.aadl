package PX4IOAR
public
  with UAS;
  with UAV;
  with DATATYPES;
  with PX4FMU;
  with CORTEX;
  with SMACCM;
<<<<<<< HEAD
=======
  with motors_type;
>>>>>>> resolute_quant

  system PX4IOAR
    features
      expansion_connector: feature group inverse of PX4FMU::expansion_slot;
      motors_and_radios: feature group inverse of UAV::motors_and_radios;
      mavlink: in out data port DATATYPES::EncryptMAVLink;
      flight_control_commands: in data port DATATYPES::Flight_Control_Commands;
      rc_radio: requires bus access UAS::RF_Spectrum.RF_2_4GHz;
      x3dr_radio: requires bus access UAS::RF_Spectrum.RF_915MHz;
  end PX4IOAR;
  
  system implementation PX4IOAR.Impl
    subcomponents
<<<<<<< HEAD
      M1: device Motor;
      M2: device Motor;
      M3: device Motor;
      M4: device Motor;
=======
      M: device Motors;
      
>>>>>>> resolute_quant
      BUZZER: device Buzzer;
      RC: device RC_Radio;
      x3DR: device x3DR_Radio;
      USART2: bus USART2;
    
    connections
      -- Motors
<<<<<<< HEAD
      port motors_and_radios.motor1 -> M1.commands;
      port motors_and_radios.motor2 -> M2.commands;
      port motors_and_radios.motor3 -> M3.commands;
      port motors_and_radios.motor4 -> M4.commands;
      bus access M1.bus_access <-> USART2;
      bus access M2.bus_access <-> USART2;
      bus access M3.bus_access <-> USART2;
      bus access M4.bus_access <-> USART2;
      
=======
      port motors_and_radios.motors -> M.commands;
      bus access M.bus_access <-> USART2;
     
>>>>>>> resolute_quant
      -- Buzzer
      bus access BUZZER.bus_access <-> expansion_connector.alarm;
      
      -- RC Radio
      port RC.commands_internal -> motors_and_radios.flight_control_commands;
      port flight_control_commands -> RC.commands_external;
      bus access RC.ppm <-> expansion_connector.ppm;
      bus access RC.antenna <-> rc_radio;
      
      -- 3DR Radio
      port x3DR.mavlink_internal <-> motors_and_radios.mavlink;
      port mavlink <-> x3DR.mavlink_external;
      bus access x3DR.usart <-> expansion_connector.usart1;
      bus access x3DR.antenna <-> x3dr_radio;
  end PX4IOAR.Impl;
  
<<<<<<< HEAD
  device Motor
    features
      commands: in data port DATATYPES::Servo_Commands;
      bus_access: requires bus access USART2;
  end Motor;
=======
  device Motors
    features
      commands : in data port motors_type::motors.impl;
      --commands: in data port DATATYPES::Servo_Commands;
      bus_access: requires bus access USART2; 
  end Motors;
>>>>>>> resolute_quant
  
  device Buzzer
    features
      bus_access: requires bus access CORTEX::AHB_Bus_Matrix;
  end Buzzer;
  
  device RC_Radio
    features
      commands_internal: out data port DATATYPES::Flight_Control_Commands;
      commands_external: in data port DATATYPES::Flight_Control_Commands;
      ppm: requires bus access CORTEX::AHB_Bus_Matrix;
      antenna: requires bus access UAS::RF_Spectrum.RF_2_4GHz;
  end RC_Radio;
  
  device x3DR_Radio
    features
      mavlink_internal: in out data port DATATYPES::EncryptMAVLink;
      mavlink_external: in out data port DATATYPES::EncryptMAVLink;
      usart: requires bus access CORTEX::AHB_Bus_Matrix;
      antenna: requires bus access UAS::RF_Spectrum.RF_915Mhz;
      
    properties
      SMACCM::Always_Sends_Message => true; 
      
      annex resolute {**  
      	prove execute_completeness(this)
      **};
      
  end x3DR_Radio;
  
  bus USART2
  end USART2;
end PX4IOAR;